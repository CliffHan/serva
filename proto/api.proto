syntax = "proto3";
package api;


service ServaManager {
  rpc GetConfig(GetConfigRequest) returns (GetConfigResponse);
  rpc ListDir(ListDirRequest) returns (ListDirResponse);
  rpc UploadFileChunk(UploadFileChunkRequest) returns (UploadFileChunkResponse);
  rpc ManageDirOrFile(ManageDirOrFileRequest) returns (ManageDirOrFileResponse);
}

/// GetConfig
/// grpcurl -plaintext -import-path ./proto -proto api.proto [::]:3000 api.ServaManager/GetConfig
message Permission {
  bool create = 1;
  bool copy = 2;
  bool move = 3;
  bool delete = 4;
  bool rename = 5;
  bool upload = 6;
  bool download = 7;
}

message Address {
  string host = 1;
  uint32 port = 2;
}

message GetConfigRequest {}
message GetConfigResponse {
  string root = 1;
  string root_canonical = 2;
  string prefix = 3;
  repeated Address address = 4;
  Permission permission = 5;
}

/// ListDir
/// grpcurl -d '{"dir_path": ""}' -plaintext -import-path ./proto -proto api.proto [::]:3000 api.ServaManager/ListDir
message ListDirRequest {
  string dir_path = 1;
}

message ListDirResponse {
  string dir_path = 1;
  repeated Directory directories = 2;
  repeated File files = 3;
}

message Directory {
  string path = 1;
  int64 modified_timestamp_in_ms = 2; // should be Timestamp but use this to make things easier
}

message File {
  string path = 1;
  int64 modified_timestamp_in_ms = 2; // should be Timestamp but use this to make things easier
  uint64 size = 3;
}

/// UploadFileChunk
/// no simple grpcurl test method since the request is compilicate and no information in response
message UploadFileChunkRequest {
  string dir_path = 1;
  string file_name = 2;
  uint64 file_size = 3;
  string file_hash = 4; // should be optional but default protobuf-compiler 3.6.1.3 don't support
  bool abort = 5;
  bytes chunk_data = 6;
  uint64 chunk_id = 7;
  uint64 chunk_count = 8;
  uint64 chunk_offset = 9;
  uint64 chunk_size = 10;
  string chunk_hash = 11; // should be optional but default protobuf-compiler 3.6.1.3 don't support
}
message UploadFileChunkResponse {}

/// ManageDirOrFile
/// no simple grpcurl test method since the request is compilicate and no information in response
message ManageDirOrFileRequest {
  string file_path_name = 1;
  string dir_path = 2;
  string target = 3;
  Operation operation = 4;
  enum Operation {
    CREATE_DIR = 0;  // create target under dir_path
    COPY_FILE = 1;   // copy file_path_name to dir_path
    DELETE_FILE = 2; // delete file_path_name
    MOVE_FILE = 3;   // move file_path_name to dir_path
    RENAME_FILE = 4; // rename name of file_path_name to target
  }
}
message ManageDirOrFileResponse {}
